// Autogenerated from Pigeon (v4.2.0), do not edit directly.
// See also: https://pub.dev/packages/pigeon
#import <Foundation/Foundation.h>
@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

@class OpenDataMessage;
@class OpenPathMessage;
@class OpenReply;
@class IdMessage;
@class GetPageMessage;
@class GetPageReply;
@class RenderPageMessage;
@class RenderPageReply;
@class RegisterTextureReply;
@class UpdateTextureMessage;
@class ResizeTextureMessage;
@class UnregisterTextureMessage;

@interface OpenDataMessage : NSObject
+ (instancetype)makeWithData:(nullable FlutterStandardTypedData *)data
    password:(nullable NSString *)password;
@property(nonatomic, strong, nullable) FlutterStandardTypedData * data;
@property(nonatomic, copy, nullable) NSString * password;
@end

@interface OpenPathMessage : NSObject
+ (instancetype)makeWithPath:(nullable NSString *)path
    password:(nullable NSString *)password;
@property(nonatomic, copy, nullable) NSString * path;
@property(nonatomic, copy, nullable) NSString * password;
@end

@interface OpenReply : NSObject
+ (instancetype)makeWithId:(nullable NSString *)id
    pagesCount:(nullable NSNumber *)pagesCount;
@property(nonatomic, copy, nullable) NSString * id;
@property(nonatomic, strong, nullable) NSNumber * pagesCount;
@end

@interface IdMessage : NSObject
+ (instancetype)makeWithId:(nullable NSString *)id;
@property(nonatomic, copy, nullable) NSString * id;
@end

@interface GetPageMessage : NSObject
+ (instancetype)makeWithDocumentId:(nullable NSString *)documentId
    pageNumber:(nullable NSNumber *)pageNumber
    autoCloseAndroid:(nullable NSNumber *)autoCloseAndroid;
@property(nonatomic, copy, nullable) NSString * documentId;
@property(nonatomic, strong, nullable) NSNumber * pageNumber;
@property(nonatomic, strong, nullable) NSNumber * autoCloseAndroid;
@end

@interface GetPageReply : NSObject
+ (instancetype)makeWithId:(nullable NSString *)id
    width:(nullable NSNumber *)width
    height:(nullable NSNumber *)height;
@property(nonatomic, copy, nullable) NSString * id;
@property(nonatomic, strong, nullable) NSNumber * width;
@property(nonatomic, strong, nullable) NSNumber * height;
@end

@interface RenderPageMessage : NSObject
+ (instancetype)makeWithPageId:(nullable NSString *)pageId
    width:(nullable NSNumber *)width
    height:(nullable NSNumber *)height
    format:(nullable NSNumber *)format
    backgroundColor:(nullable NSString *)backgroundColor
    crop:(nullable NSNumber *)crop
    cropX:(nullable NSNumber *)cropX
    cropY:(nullable NSNumber *)cropY
    cropHeight:(nullable NSNumber *)cropHeight
    cropWidth:(nullable NSNumber *)cropWidth
    quality:(nullable NSNumber *)quality
    forPrint:(nullable NSNumber *)forPrint;
@property(nonatomic, copy, nullable) NSString * pageId;
@property(nonatomic, strong, nullable) NSNumber * width;
@property(nonatomic, strong, nullable) NSNumber * height;
@property(nonatomic, strong, nullable) NSNumber * format;
@property(nonatomic, copy, nullable) NSString * backgroundColor;
@property(nonatomic, strong, nullable) NSNumber * crop;
@property(nonatomic, strong, nullable) NSNumber * cropX;
@property(nonatomic, strong, nullable) NSNumber * cropY;
@property(nonatomic, strong, nullable) NSNumber * cropHeight;
@property(nonatomic, strong, nullable) NSNumber * cropWidth;
@property(nonatomic, strong, nullable) NSNumber * quality;
@property(nonatomic, strong, nullable) NSNumber * forPrint;
@end

@interface RenderPageReply : NSObject
+ (instancetype)makeWithWidth:(nullable NSNumber *)width
    height:(nullable NSNumber *)height
    path:(nullable NSString *)path
    data:(nullable FlutterStandardTypedData *)data;
@property(nonatomic, strong, nullable) NSNumber * width;
@property(nonatomic, strong, nullable) NSNumber * height;
@property(nonatomic, copy, nullable) NSString * path;
@property(nonatomic, strong, nullable) FlutterStandardTypedData * data;
@end

@interface RegisterTextureReply : NSObject
+ (instancetype)makeWithId:(nullable NSNumber *)id;
@property(nonatomic, strong, nullable) NSNumber * id;
@end

@interface UpdateTextureMessage : NSObject
+ (instancetype)makeWithDocumentId:(nullable NSString *)documentId
    pageNumber:(nullable NSNumber *)pageNumber
    pageId:(nullable NSString *)pageId
    textureId:(nullable NSNumber *)textureId
    width:(nullable NSNumber *)width
    height:(nullable NSNumber *)height
    backgroundColor:(nullable NSString *)backgroundColor
    sourceX:(nullable NSNumber *)sourceX
    sourceY:(nullable NSNumber *)sourceY
    destinationX:(nullable NSNumber *)destinationX
    destinationY:(nullable NSNumber *)destinationY
    fullWidth:(nullable NSNumber *)fullWidth
    fullHeight:(nullable NSNumber *)fullHeight
    textureWidth:(nullable NSNumber *)textureWidth
    textureHeight:(nullable NSNumber *)textureHeight
    allowAntiAliasing:(nullable NSNumber *)allowAntiAliasing;
@property(nonatomic, copy, nullable) NSString * documentId;
@property(nonatomic, strong, nullable) NSNumber * pageNumber;
@property(nonatomic, copy, nullable) NSString * pageId;
@property(nonatomic, strong, nullable) NSNumber * textureId;
@property(nonatomic, strong, nullable) NSNumber * width;
@property(nonatomic, strong, nullable) NSNumber * height;
@property(nonatomic, copy, nullable) NSString * backgroundColor;
@property(nonatomic, strong, nullable) NSNumber * sourceX;
@property(nonatomic, strong, nullable) NSNumber * sourceY;
@property(nonatomic, strong, nullable) NSNumber * destinationX;
@property(nonatomic, strong, nullable) NSNumber * destinationY;
@property(nonatomic, strong, nullable) NSNumber * fullWidth;
@property(nonatomic, strong, nullable) NSNumber * fullHeight;
@property(nonatomic, strong, nullable) NSNumber * textureWidth;
@property(nonatomic, strong, nullable) NSNumber * textureHeight;
@property(nonatomic, strong, nullable) NSNumber * allowAntiAliasing;
@end

@interface ResizeTextureMessage : NSObject
+ (instancetype)makeWithTextureId:(nullable NSNumber *)textureId
    width:(nullable NSNumber *)width
    height:(nullable NSNumber *)height;
@property(nonatomic, strong, nullable) NSNumber * textureId;
@property(nonatomic, strong, nullable) NSNumber * width;
@property(nonatomic, strong, nullable) NSNumber * height;
@end

@interface UnregisterTextureMessage : NSObject
+ (instancetype)makeWithId:(nullable NSNumber *)id;
@property(nonatomic, strong, nullable) NSNumber * id;
@end

///The codec used by PdfxApi.
NSObject<FlutterMessageCodec> *PdfxApiGetCodec(void);

/// Rebuild: `flutter pub run pigeon --input pigeons/message.dart`
/// After build edit ios/Classes/pigeon/messages.m
/// replace `#import <Flutter/Flutter.h>` to
/// ````
/// ````
///
@protocol PdfxApi
- (void)openDocumentDataMessage:(OpenDataMessage *)message completion:(void(^)(OpenReply *_Nullable, FlutterError *_Nullable))completion;
- (void)openDocumentFileMessage:(OpenPathMessage *)message completion:(void(^)(OpenReply *_Nullable, FlutterError *_Nullable))completion;
- (void)openDocumentAssetMessage:(OpenPathMessage *)message completion:(void(^)(OpenReply *_Nullable, FlutterError *_Nullable))completion;
- (void)closeDocumentMessage:(IdMessage *)message error:(FlutterError *_Nullable *_Nonnull)error;
- (void)getPageMessage:(GetPageMessage *)message completion:(void(^)(GetPageReply *_Nullable, FlutterError *_Nullable))completion;
- (void)renderPageMessage:(RenderPageMessage *)message completion:(void(^)(RenderPageReply *_Nullable, FlutterError *_Nullable))completion;
- (void)closePageMessage:(IdMessage *)message error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable RegisterTextureReply *)registerTextureWithError:(FlutterError *_Nullable *_Nonnull)error;
- (void)updateTextureMessage:(UpdateTextureMessage *)message completion:(void(^)(FlutterError *_Nullable))completion;
- (void)resizeTextureMessage:(ResizeTextureMessage *)message completion:(void(^)(FlutterError *_Nullable))completion;
- (void)unregisterTextureMessage:(UnregisterTextureMessage *)message error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void PdfxApiSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<PdfxApi> *_Nullable api);

NS_ASSUME_NONNULL_END
